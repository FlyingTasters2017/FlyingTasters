--  TASTE - Warning: This is NOT the real Concurrency view  --
--  This file was automatically generated and should remain read-only
--  Open it with TASTE-IV
--  The only intended use of this file is visualization - not processing.

package generated_cv::IV::ConcurrencyView
public
with dataview; 
with exportedComponent::FV;
with taste;

  --{ interfaceview obj6480 10 10
  --TASTE-generated concurrency view
  --For visualization purposes.
  --}

  system exportedComponent
  end exportedComponent;

  system implementation exportedComponent.others
    subcomponents
	supervisor : system interfaceview::IV::PASSIVE_supervisor.others;
	socketclient : system interfaceview::IV::PASSIVE_socketclient.others;
	gcs : system interfaceview::IV::PASSIVE_gcs.others;
	x86_partition_taste_api : system interfaceview::IV::PASSIVE_x86_partition_taste_api.others;
	vt_supervisor_pulse : system interfaceview::IV::THREAD_vt_supervisor_pulse.others;
	vt_supervisor_takeoff : system interfaceview::IV::THREAD_vt_supervisor_takeoff.others;
	vt_gcs_sensordata : system interfaceview::IV::THREAD_vt_gcs_sensordata.others;
	vt_gcs_gui_polling_gcs : system interfaceview::IV::THREAD_vt_gcs_gui_polling_gcs.others;
    connections
	unprotected_readStabilizerSendThrust : subprogram access PASSIVE_socketclient.readStabilizerSendThrust -> PASSIVE_supervisor.readStabilizerSendThrust;
	sporadic_artificial_SensorData : subprogram access THREAD_vt_gcs_sensordata.artificial_SensorData -> PASSIVE_supervisor.SensorData;
	unprotected_supervisor_has_pending_msg : subprogram access PASSIVE_x86_partition_taste_api.supervisor_has_pending_msg -> PASSIVE_supervisor.check_queue;
	sporadic_artificial_takeoff : subprogram access THREAD_vt_supervisor_takeoff.artificial_takeoff -> PASSIVE_gcs.takeoff;
	protected_pulse : subprogram access PASSIVE_supervisor.pulse -> THREAD_vt_supervisor_pulse.pulse;
	unprotected_readStabilizerSendThrust : subprogram access PASSIVE_socketclient.readStabilizerSendThrust -> THREAD_vt_supervisor_pulse.readStabilizerSendThrust_vt;
	sporadic_artificial_SensorData : subprogram access THREAD_vt_gcs_sensordata.artificial_SensorData -> THREAD_vt_supervisor_pulse.SensorData_vt;
	unprotected_supervisor_has_pending_msg : subprogram access PASSIVE_x86_partition_taste_api.supervisor_has_pending_msg -> THREAD_vt_supervisor_pulse.check_queue_vt;
	protected_takeoff : subprogram access PASSIVE_supervisor.takeoff -> THREAD_vt_supervisor_takeoff.takeoff;
	unprotected_readStabilizerSendThrust : subprogram access PASSIVE_socketclient.readStabilizerSendThrust -> THREAD_vt_supervisor_takeoff.readStabilizerSendThrust_vt;
	sporadic_artificial_SensorData : subprogram access THREAD_vt_gcs_sensordata.artificial_SensorData -> THREAD_vt_supervisor_takeoff.SensorData_vt;
	unprotected_supervisor_has_pending_msg : subprogram access PASSIVE_x86_partition_taste_api.supervisor_has_pending_msg -> THREAD_vt_supervisor_takeoff.check_queue_vt;
	protected_SensorData : subprogram access PASSIVE_gcs.SensorData -> THREAD_vt_gcs_sensordata.SensorData;
	sporadic_artificial_takeoff : subprogram access THREAD_vt_supervisor_takeoff.artificial_takeoff -> THREAD_vt_gcs_sensordata.takeoff_vt;
	protected_gui_polling_gcs : subprogram access PASSIVE_gcs.gui_polling_gcs -> THREAD_vt_gcs_gui_polling_gcs.gui_polling_gcs;
	sporadic_artificial_takeoff : subprogram access THREAD_vt_supervisor_takeoff.artificial_takeoff -> THREAD_vt_gcs_gui_polling_gcs.takeoff_vt;
  end exportedComponent.others;

  system PASSIVE_supervisor
    features
	pulse : provides subprogram access exportedComponent::fv::pulse.others
	  { taste::Coordinates => "200 215 200 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	takeoff : provides subprogram access exportedComponent::fv::takeoff.others
	  { taste::Coordinates => "200 260 200 260";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	readStabilizerSendThrust : requires subprogram access exportedComponent::fv::readStabilizerSendThrust.others
	  { taste::Coordinates => "450 215 450 215";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	SensorData : requires subprogram access exportedComponent::fv::artificial_SensorData.others
	  { taste::Coordinates => "450 260 450 260";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	check_queue : requires subprogram access exportedComponent::fv::supervisor_has_pending_msg.others
	  { taste::Coordinates => "450 305 450 305";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "200 200 450 335";
	taste::instance_name => "supervisor";
  end PASSIVE_supervisor;

  system implementation PASSIVE_supervisor.others
    subcomponents
	pulse_impl : subprogram exportedComponent::FV::pulse.others
	  { compute_execution_time => 0ms..0ms;};
	takeoff_impl : subprogram exportedComponent::FV::takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	readStabilizerSendThrust_impl : subprogram exportedComponent::FV::readStabilizerSendThrust.others
	  { compute_execution_time => 0ms..0ms;};
	SensorData_impl : subprogram exportedComponent::FV::artificial_SensorData.others
	  { compute_execution_time => 0ms..0ms;};
	check_queue_impl : subprogram exportedComponent::FV::supervisor_has_pending_msg.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access pulse_impl -> pulse;
	subprogram access takeoff_impl -> takeoff;
	subprogram access readStabilizerSendThrust_impl -> readStabilizerSendThrust;
	subprogram access SensorData_impl -> SensorData;
	subprogram access check_queue_impl -> check_queue;
  end PASSIVE_supervisor.others;

  system PASSIVE_socketclient
    features
	readStabilizerSendThrust : provides subprogram access exportedComponent::fv::readStabilizerSendThrust.others
	  { taste::Coordinates => "600 215 600 215";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "600 200 850 245";
	taste::instance_name => "socketclient";
  end PASSIVE_socketclient;

  system implementation PASSIVE_socketclient.others
    subcomponents
	readStabilizerSendThrust_impl : subprogram exportedComponent::FV::readStabilizerSendThrust.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access readStabilizerSendThrust_impl -> readStabilizerSendThrust;
  end PASSIVE_socketclient.others;

  system PASSIVE_gcs
    features
	SensorData : provides subprogram access exportedComponent::fv::SensorData.others
	  { taste::Coordinates => "1000 215 1000 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	takeoff : requires subprogram access exportedComponent::fv::artificial_takeoff.others
	  { taste::Coordinates => "1250 215 1250 215";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	gui_polling_gcs : provides subprogram access exportedComponent::fv::gui_polling_gcs.others
	  { taste::Coordinates => "1000 260 1000 260";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 40;};
    properties
	source_language => C;
	taste::coordinates => "1000 200 1250 290";
	taste::instance_name => "gcs";
  end PASSIVE_gcs;

  system implementation PASSIVE_gcs.others
    subcomponents
	SensorData_impl : subprogram exportedComponent::FV::SensorData.others
	  { compute_execution_time => 0ms..0ms;};
	takeoff_impl : subprogram exportedComponent::FV::artificial_takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	gui_polling_gcs_impl : subprogram exportedComponent::FV::gui_polling_gcs.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access SensorData_impl -> SensorData;
	subprogram access takeoff_impl -> takeoff;
	subprogram access gui_polling_gcs_impl -> gui_polling_gcs;
  end PASSIVE_gcs.others;

  system PASSIVE_x86_partition_taste_api
    features
	supervisor_has_pending_msg : provides subprogram access exportedComponent::fv::check_queue.others
	  { taste::Coordinates => "1400 215 1400 215";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "1400 200 1650 245";
	taste::instance_name => "x86_partition_taste_api";
  end PASSIVE_x86_partition_taste_api;

  system implementation PASSIVE_x86_partition_taste_api.others
    subcomponents
	supervisor_has_pending_msg_impl : subprogram exportedComponent::FV::check_queue.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access supervisor_has_pending_msg_impl -> supervisor_has_pending_msg;
  end PASSIVE_x86_partition_taste_api.others;

  system THREAD_vt_supervisor_pulse
    features
	artificial_pulse : provides subprogram access exportedComponent::fv::pulse.others
	  { taste::Coordinates => "1800 215 1800 215";
	    taste::RCMoperationKind => cyclic;
	    taste::RCMperiod => 0;};
	pulse : requires subprogram access exportedComponent::fv::pulse.others
	  { taste::Coordinates => "2050 215 2050 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	readStabilizerSendThrust_vt : requires subprogram access exportedComponent::fv::readStabilizerSendThrust.others
	  { taste::Coordinates => "2050 260 2050 260";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	SensorData_vt : requires subprogram access exportedComponent::fv::artificial_SensorData.others
	  { taste::Coordinates => "2050 305 2050 305";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	check_queue_vt : requires subprogram access exportedComponent::fv::supervisor_has_pending_msg.others
	  { taste::Coordinates => "2050 350 2050 350";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "1800 200 2050 380";
	taste::instance_name => "vt_supervisor_pulse";
  end THREAD_vt_supervisor_pulse;

  system implementation THREAD_vt_supervisor_pulse.others
    subcomponents
	artificial_pulse_impl : subprogram exportedComponent::FV::pulse.others
	  { compute_execution_time => 0ms..0ms;};
	pulse_impl : subprogram exportedComponent::FV::pulse.others
	  { compute_execution_time => 0ms..0ms;};
	readStabilizerSendThrust_vt_impl : subprogram exportedComponent::FV::readStabilizerSendThrust.others
	  { compute_execution_time => 0ms..0ms;};
	SensorData_vt_impl : subprogram exportedComponent::FV::artificial_SensorData.others
	  { compute_execution_time => 0ms..0ms;};
	check_queue_vt_impl : subprogram exportedComponent::FV::supervisor_has_pending_msg.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_pulse_impl -> artificial_pulse;
	subprogram access pulse_impl -> pulse;
	subprogram access readStabilizerSendThrust_vt_impl -> readStabilizerSendThrust_vt;
	subprogram access SensorData_vt_impl -> SensorData_vt;
	subprogram access check_queue_vt_impl -> check_queue_vt;
  end THREAD_vt_supervisor_pulse.others;

  system THREAD_vt_supervisor_takeoff
    features
	artificial_takeoff : provides subprogram access exportedComponent::fv::takeoff.others
	  { taste::Coordinates => "2200 215 2200 215";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	takeoff : requires subprogram access exportedComponent::fv::takeoff.others
	  { taste::Coordinates => "2450 215 2450 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	readStabilizerSendThrust_vt : requires subprogram access exportedComponent::fv::readStabilizerSendThrust.others
	  { taste::Coordinates => "2450 260 2450 260";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	SensorData_vt : requires subprogram access exportedComponent::fv::artificial_SensorData.others
	  { taste::Coordinates => "2450 305 2450 305";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	check_queue_vt : requires subprogram access exportedComponent::fv::supervisor_has_pending_msg.others
	  { taste::Coordinates => "2450 350 2450 350";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "2200 200 2450 380";
	taste::instance_name => "vt_supervisor_takeoff";
  end THREAD_vt_supervisor_takeoff;

  system implementation THREAD_vt_supervisor_takeoff.others
    subcomponents
	artificial_takeoff_impl : subprogram exportedComponent::FV::takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	takeoff_impl : subprogram exportedComponent::FV::takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	readStabilizerSendThrust_vt_impl : subprogram exportedComponent::FV::readStabilizerSendThrust.others
	  { compute_execution_time => 0ms..0ms;};
	SensorData_vt_impl : subprogram exportedComponent::FV::artificial_SensorData.others
	  { compute_execution_time => 0ms..0ms;};
	check_queue_vt_impl : subprogram exportedComponent::FV::supervisor_has_pending_msg.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_takeoff_impl -> artificial_takeoff;
	subprogram access takeoff_impl -> takeoff;
	subprogram access readStabilizerSendThrust_vt_impl -> readStabilizerSendThrust_vt;
	subprogram access SensorData_vt_impl -> SensorData_vt;
	subprogram access check_queue_vt_impl -> check_queue_vt;
  end THREAD_vt_supervisor_takeoff.others;

  system THREAD_vt_gcs_sensordata
    features
	artificial_SensorData : provides subprogram access exportedComponent::fv::SensorData.others
	  { taste::Coordinates => "200 695 200 695";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	SensorData : requires subprogram access exportedComponent::fv::SensorData.others
	  { taste::Coordinates => "450 695 450 695";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	takeoff_vt : requires subprogram access exportedComponent::fv::artificial_takeoff.others
	  { taste::Coordinates => "450 740 450 740";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "200 680 450 770";
	taste::instance_name => "vt_gcs_sensordata";
  end THREAD_vt_gcs_sensordata;

  system implementation THREAD_vt_gcs_sensordata.others
    subcomponents
	artificial_SensorData_impl : subprogram exportedComponent::FV::SensorData.others
	  { compute_execution_time => 0ms..0ms;};
	SensorData_impl : subprogram exportedComponent::FV::SensorData.others
	  { compute_execution_time => 0ms..0ms;};
	takeoff_vt_impl : subprogram exportedComponent::FV::artificial_takeoff.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_SensorData_impl -> artificial_SensorData;
	subprogram access SensorData_impl -> SensorData;
	subprogram access takeoff_vt_impl -> takeoff_vt;
  end THREAD_vt_gcs_sensordata.others;

  system THREAD_vt_gcs_gui_polling_gcs
    features
	artificial_gui_polling_gcs : provides subprogram access exportedComponent::fv::gui_polling_gcs.others
	  { taste::Coordinates => "600 695 600 695";
	    taste::RCMoperationKind => cyclic;
	    taste::RCMperiod => 40;};
	gui_polling_gcs : requires subprogram access exportedComponent::fv::gui_polling_gcs.others
	  { taste::Coordinates => "850 695 850 695";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 40;};
	takeoff_vt : requires subprogram access exportedComponent::fv::artificial_takeoff.others
	  { taste::Coordinates => "850 740 850 740";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "600 680 850 770";
	taste::instance_name => "vt_gcs_gui_polling_gcs";
  end THREAD_vt_gcs_gui_polling_gcs;

  system implementation THREAD_vt_gcs_gui_polling_gcs.others
    subcomponents
	artificial_gui_polling_gcs_impl : subprogram exportedComponent::FV::gui_polling_gcs.others
	  { compute_execution_time => 0ms..0ms;};
	gui_polling_gcs_impl : subprogram exportedComponent::FV::gui_polling_gcs.others
	  { compute_execution_time => 0ms..0ms;};
	takeoff_vt_impl : subprogram exportedComponent::FV::artificial_takeoff.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_gui_polling_gcs_impl -> artificial_gui_polling_gcs;
	subprogram access gui_polling_gcs_impl -> gui_polling_gcs;
	subprogram access takeoff_vt_impl -> takeoff_vt;
  end THREAD_vt_gcs_gui_polling_gcs.others;

properties
  taste::coordinates => "0 0 2970 2100";

end generated_cv::IV;

package exportedComponent::FV
public
with dataview;
with taste;

  subprogram pulse
  end pulse;

  subprogram takeoff
  end takeoff;

  subprogram readStabilizerSendThrust
  end readStabilizerSendThrust;

  subprogram artificial_SensorData
  end artificial_SensorData;

  subprogram supervisor_has_pending_msg
  end supervisor_has_pending_msg;

  subprogram SensorData
  end SensorData;

  subprogram artificial_takeoff
  end artificial_takeoff;

  subprogram gui_polling_gcs
  end gui_polling_gcs;

  subprogram check_queue
  end check_queue;

end exportedComponent::FV;
