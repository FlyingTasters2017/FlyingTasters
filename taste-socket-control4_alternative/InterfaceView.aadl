---------------------------------------------------
-- AADL2.0
-- TASTE
-- 
-- 
---------------------------------------------------

PACKAGE interfaceview::FV::socketClient
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_readStabilizerSendThrust
FEATURES
  droneData : IN PARAMETER DataView::MyDroneData {
    Taste::encoding => NATIVE;
  };
  sensorData : OUT PARAMETER DataView::MySensorData {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_readStabilizerSendThrust;

SUBPROGRAM IMPLEMENTATION PI_readStabilizerSendThrust.others
END PI_readStabilizerSendThrust.others;

SUBPROGRAM RI_controlAction
FEATURES
  posData : IN PARAMETER DataView::MyPositionData {
    Taste::encoding => NATIVE;
  };
  sensorData : IN PARAMETER DataView::MySensorData {
    Taste::encoding => NATIVE;
  };
  droneData : OUT PARAMETER DataView::MyDroneData {
    Taste::encoding => NATIVE;
  };
END RI_controlAction;

SUBPROGRAM IMPLEMENTATION RI_controlAction.others
END RI_controlAction.others;

SUBPROGRAM RI_getPosition
FEATURES
  currentPosition : OUT PARAMETER DataView::MyPositionData {
    Taste::encoding => NATIVE;
  };
  currentHeight : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
END RI_getPosition;

SUBPROGRAM IMPLEMENTATION RI_getPosition.others
END RI_getPosition.others;

END interfaceview::FV::socketClient;

PACKAGE interfaceview::FV::PixyProcess
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_processData
FEATURES
  x : IN PARAMETER DataView::T_UInt32 {
    Taste::encoding => NATIVE;
  };
  y : IN PARAMETER DataView::T_UInt32 {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_processData;

SUBPROGRAM IMPLEMENTATION PI_processData.others
END PI_processData.others;

SUBPROGRAM PI_getPosition
FEATURES
  currentPosition : OUT PARAMETER DataView::MyPositionData {
    Taste::encoding => NATIVE;
  };
  currentHeight : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_getPosition;

SUBPROGRAM IMPLEMENTATION PI_getPosition.others
END PI_getPosition.others;

END interfaceview::FV::PixyProcess;

PACKAGE interfaceview::FV::cClient
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_takeoff
FEATURES
  droneData : OUT PARAMETER DataView::MyDroneData {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_takeoff;

SUBPROGRAM IMPLEMENTATION PI_takeoff.others
END PI_takeoff.others;

END interfaceview::FV::cClient;

PACKAGE interfaceview::FV::Timer
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_printTime
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_printTime;

SUBPROGRAM IMPLEMENTATION PI_printTime.others
END PI_printTime.others;

END interfaceview::FV::Timer;

PACKAGE interfaceview::FV::Pixycam
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_pulse
FEATURES
  startvalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
END PI_pulse;

SUBPROGRAM IMPLEMENTATION PI_pulse.others
END PI_pulse.others;

SUBPROGRAM PI_startStop
FEATURES
  ssvalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
END PI_startStop;

SUBPROGRAM IMPLEMENTATION PI_startStop.others
END PI_startStop.others;

SUBPROGRAM RI_readStabilizerSendThrust
FEATURES
  droneData : IN PARAMETER DataView::MyDroneData {
    Taste::encoding => NATIVE;
  };
  sensorData : OUT PARAMETER DataView::MySensorData {
    Taste::encoding => NATIVE;
  };
END RI_readStabilizerSendThrust;

SUBPROGRAM IMPLEMENTATION RI_readStabilizerSendThrust.others
END RI_readStabilizerSendThrust.others;

SUBPROGRAM RI_takeoff
FEATURES
  droneData : OUT PARAMETER DataView::MyDroneData {
    Taste::encoding => NATIVE;
  };
END RI_takeoff;

SUBPROGRAM IMPLEMENTATION RI_takeoff.others
END RI_takeoff.others;

SUBPROGRAM RI_printTime
END RI_printTime;

SUBPROGRAM IMPLEMENTATION RI_printTime.others
END RI_printTime.others;

SUBPROGRAM RI_processData
FEATURES
  x : IN PARAMETER DataView::T_UInt32 {
    Taste::encoding => NATIVE;
  };
  y : IN PARAMETER DataView::T_UInt32 {
    Taste::encoding => NATIVE;
  };
END RI_processData;

SUBPROGRAM IMPLEMENTATION RI_processData.others
END RI_processData.others;

END interfaceview::FV::Pixycam;

PACKAGE interfaceview::FV::controller
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_controlAction
FEATURES
  posData : IN PARAMETER DataView::MyPositionData {
    Taste::encoding => NATIVE;
  };
  sensorData : IN PARAMETER DataView::MySensorData {
    Taste::encoding => NATIVE;
  };
  droneData : OUT PARAMETER DataView::MyDroneData {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_controlAction;

SUBPROGRAM IMPLEMENTATION PI_controlAction.others
END PI_controlAction.others;

END interfaceview::FV::controller;

PACKAGE interfaceview::FV::GUI
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM RI_onOff
FEATURES
  onoffvalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
END RI_onOff;

SUBPROGRAM IMPLEMENTATION RI_onOff.others
END RI_onOff.others;

SUBPROGRAM RI_dopulse
FEATURES
  dopulsevalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
END RI_dopulse;

SUBPROGRAM IMPLEMENTATION RI_dopulse.others
END RI_dopulse.others;

END interfaceview::FV::GUI;

PACKAGE interfaceview::FV::Interruptor
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_onOff
FEATURES
  onoffvalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_onOff;

SUBPROGRAM IMPLEMENTATION PI_onOff.others
END PI_onOff.others;

SUBPROGRAM RI_startStop
FEATURES
  ssvalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
END RI_startStop;

SUBPROGRAM IMPLEMENTATION RI_startStop.others
END RI_startStop.others;

SUBPROGRAM RI_pulse
FEATURES
  startvalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
END RI_pulse;

SUBPROGRAM IMPLEMENTATION RI_pulse.others
END RI_pulse.others;

SUBPROGRAM PI_dopulse
FEATURES
  dopulsevalue : IN PARAMETER DataView::MyInteger {
    Taste::encoding => UPER;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_dopulse;

SUBPROGRAM IMPLEMENTATION PI_dopulse.others
END PI_dopulse.others;

END interfaceview::FV::Interruptor;

PACKAGE interfaceview::IV
PUBLIC

WITH interfaceview::FV::socketClient;
WITH interfaceview::FV::controller;
WITH interfaceview::FV::PixyProcess;
WITH interfaceview::FV::cClient;
WITH interfaceview::FV::Timer;
WITH interfaceview::FV::Pixycam;
WITH interfaceview::FV::Interruptor;
WITH interfaceview::FV::GUI;
WITH interfaceview::FV;
WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SYSTEM socketClient
FEATURES
  PI_readStabilizerSendThrust : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::socketClient::PI_readStabilizerSendThrust.others {
    Taste::coordinates => "1858 849";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "readStabilizerSendThrust";
  };
  RI_controlAction : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::controller::PI_controlAction.others {
    Taste::coordinates => "2508 1206";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "controlAction";
    Taste::labelInheritance => "true";
  };
  RI_getPosition : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::PixyProcess::PI_getPosition.others {
    Taste::coordinates => "2083 1206";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "getPosition";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (C);
END socketClient;

SYSTEM IMPLEMENTATION socketClient.others
SUBCOMPONENTS
  readStabilizerSendThrust_impl : SUBPROGRAM interfaceview::FV::socketClient::PI_readStabilizerSendThrust.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_readStabilizerSendThrust_impl : SUBPROGRAM ACCESS readStabilizerSendThrust_impl -> PI_readStabilizerSendThrust;
END socketClient.others;

SYSTEM PixyProcess
FEATURES
  PI_processData : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::PixyProcess::PI_processData.others {
    Taste::coordinates => "1359 1943";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "processData";
  };
  PI_getPosition : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::PixyProcess::PI_getPosition.others {
    Taste::coordinates => "1577 1696";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "getPosition";
  };
PROPERTIES
  Source_Language => (C);
END PixyProcess;

SYSTEM IMPLEMENTATION PixyProcess.others
SUBCOMPONENTS
  processData_impl : SUBPROGRAM interfaceview::FV::PixyProcess::PI_processData.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
  getPosition_impl : SUBPROGRAM interfaceview::FV::PixyProcess::PI_getPosition.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_processData_impl : SUBPROGRAM ACCESS processData_impl -> PI_processData;
  OpToPICnx_getPosition_impl : SUBPROGRAM ACCESS getPosition_impl -> PI_getPosition;
END PixyProcess.others;

SYSTEM cClient
FEATURES
  PI_takeoff : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::cClient::PI_takeoff.others {
    Taste::coordinates => "267 1729";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "takeoff";
  };
PROPERTIES
  Source_Language => (C);
END cClient;

SYSTEM IMPLEMENTATION cClient.others
SUBCOMPONENTS
  takeoff_impl : SUBPROGRAM interfaceview::FV::cClient::PI_takeoff.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_takeoff_impl : SUBPROGRAM ACCESS takeoff_impl -> PI_takeoff;
END cClient.others;

SYSTEM Timer
FEATURES
  PI_printTime : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Timer::PI_printTime.others {
    Taste::coordinates => "641 1734";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "printTime";
  };
PROPERTIES
  Source_Language => (C);
END Timer;

SYSTEM IMPLEMENTATION Timer.others
SUBCOMPONENTS
  printTime_impl : SUBPROGRAM interfaceview::FV::Timer::PI_printTime.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_printTime_impl : SUBPROGRAM ACCESS printTime_impl -> PI_printTime;
END Timer.others;

SYSTEM Pixycam
FEATURES
  PI_pulse : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Pixycam::PI_pulse.others {
    Taste::coordinates => "280 1085";
    Taste::RCMoperationKind => protected;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "pulse";
  };
  PI_startStop : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Pixycam::PI_startStop.others {
    Taste::coordinates => "729 1085";
    Taste::RCMoperationKind => protected;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "startStop";
  };
  RI_readStabilizerSendThrust : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::socketClient::PI_readStabilizerSendThrust.others {
    Taste::coordinates => "938 1145";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "readStabilizerSendThrust";
    Taste::labelInheritance => "true";
  };
  RI_takeoff : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::cClient::PI_takeoff.others {
    Taste::coordinates => "286 1462";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "takeoff";
    Taste::labelInheritance => "true";
  };
  RI_printTime : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Timer::PI_printTime.others {
    Taste::coordinates => "625 1462";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "printTime";
    Taste::labelInheritance => "true";
  };
  RI_processData : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::PixyProcess::PI_processData.others {
    Taste::coordinates => "938 1361";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "processData";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (C);
END Pixycam;

SYSTEM IMPLEMENTATION Pixycam.others
SUBCOMPONENTS
  flagsToLinkWith : DATA DataView::Taste_directive {
    Taste::FS_Default_Value => "linker-option:""-L /usr/local/lib/ -lpixyusb -lboost_system -lboost_chrono -lusb-1.0 -lboost_thread -lstdc++""";
  };
  pulse_impl : SUBPROGRAM interfaceview::FV::Pixycam::PI_pulse.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
  startStop_impl : SUBPROGRAM interfaceview::FV::Pixycam::PI_startStop.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_pulse_impl : SUBPROGRAM ACCESS pulse_impl -> PI_pulse;
  OpToPICnx_startStop_impl : SUBPROGRAM ACCESS startStop_impl -> PI_startStop;
END Pixycam.others;

SYSTEM controller
FEATURES
  PI_controlAction : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::controller::PI_controlAction.others {
    Taste::coordinates => "2521 1650";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "controlAction";
  };
PROPERTIES
  Source_Language => (Simulink);
END controller;

SYSTEM IMPLEMENTATION controller.others
SUBCOMPONENTS
  controlAction_impl : SUBPROGRAM interfaceview::FV::controller::PI_controlAction.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_controlAction_impl : SUBPROGRAM ACCESS controlAction_impl -> PI_controlAction;
END controller.others;

SYSTEM GUI
FEATURES
  RI_onOff : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Interruptor::PI_onOff.others {
    Taste::coordinates => "449 576";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "onOff";
    Taste::labelInheritance => "true";
  };
  RI_dopulse : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Interruptor::PI_dopulse.others {
    Taste::coordinates => "351 576";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "dopulse";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (GUI);
END GUI;

SYSTEM IMPLEMENTATION GUI.others
END GUI.others;

SYSTEM Interruptor
FEATURES
  PI_onOff : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Interruptor::PI_onOff.others {
    Taste::coordinates => "499 756";
    Taste::RCMoperationKind => sporadic;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "onOff";
  };
  RI_startStop : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Pixycam::PI_startStop.others {
    Taste::coordinates => "527 912";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "startStop";
    Taste::labelInheritance => "true";
  };
  RI_pulse : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Pixycam::PI_pulse.others {
    Taste::coordinates => "355 912";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "pulse";
    Taste::labelInheritance => "true";
  };
  PI_dopulse : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Interruptor::PI_dopulse.others {
    Taste::coordinates => "351 756";
    Taste::RCMoperationKind => sporadic;
    Taste::InterfaceName => "dopulse";
  };
PROPERTIES
  Source_Language => (SDL);
END Interruptor;

SYSTEM IMPLEMENTATION Interruptor.others
SUBCOMPONENTS
  onOff_impl : SUBPROGRAM interfaceview::FV::Interruptor::PI_onOff.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
  dopulse_impl : SUBPROGRAM interfaceview::FV::Interruptor::PI_dopulse.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_onOff_impl : SUBPROGRAM ACCESS onOff_impl -> PI_onOff;
  OpToPICnx_dopulse_impl : SUBPROGRAM ACCESS dopulse_impl -> PI_dopulse;
END Interruptor.others;

SYSTEM interfaceview
END interfaceview;

SYSTEM IMPLEMENTATION interfaceview.others
SUBCOMPONENTS
  socketClient : SYSTEM interfaceview::IV::socketClient.others {
    Taste::coordinates => "1858 708 2822 1206";
  };
  PixyProcess : SYSTEM interfaceview::IV::PixyProcess.others {
    Taste::coordinates => "1359 1696 1864 2034";
  };
  cClient : SYSTEM interfaceview::IV::cClient.others {
    Taste::coordinates => "97 1729 410 1992";
  };
  Timer : SYSTEM interfaceview::IV::Timer.others {
    Taste::coordinates => "472 1734 816 1993";
  };
  Pixycam : SYSTEM interfaceview::IV::Pixycam.others {
    Taste::coordinates => "149 1085 938 1462";
  };
  controller : SYSTEM interfaceview::IV::controller.others {
    Taste::coordinates => "2353 1650 2809 2065";
  };
  GUI : SYSTEM interfaceview::IV::GUI.others {
    Taste::coordinates => "149 280 601 576";
  };
  Interruptor : SYSTEM interfaceview::IV::Interruptor.others {
    Taste::coordinates => "271 756 596 912";
  };
CONNECTIONS
  socketClient_readStabilizerSendThrust_Pixycam_readStabilizerSendThrust : SUBPROGRAM ACCESS socketClient.PI_readStabilizerSendThrust -> Pixycam.RI_readStabilizerSendThrust {
    Taste::coordinates => "937 1145 1212 1145 1212 849 1858 849";
  };
  controller_controlAction_socketClient_controlAction : SUBPROGRAM ACCESS controller.PI_controlAction -> socketClient.RI_controlAction {
    Taste::coordinates => "2508 1206 2508 1344 2521 1344 2521 1650";
  };
  PixyProcess_getPosition_socketClient_getPosition : SUBPROGRAM ACCESS PixyProcess.PI_getPosition -> socketClient.RI_getPosition {
    Taste::coordinates => "2083 1206 2083 1515 1577 1515 1577 1693";
  };
  PixyProcess_processData_Pixycam_processData : SUBPROGRAM ACCESS PixyProcess.PI_processData -> Pixycam.RI_processData {
    Taste::coordinates => "937 1361 1092 1361 1092 1943 1359 1943";
  };
  cClient_takeoff_Pixycam_takeoff : SUBPROGRAM ACCESS cClient.PI_takeoff -> Pixycam.RI_takeoff {
    Taste::coordinates => "286 1462 286 1553 267 1553 267 1730";
  };
  Timer_printTime_Pixycam_printTime : SUBPROGRAM ACCESS Timer.PI_printTime -> Pixycam.RI_printTime {
    Taste::coordinates => "625 1462 625 1570 641 1570 641 1733";
  };
  Pixycam_pulse_Interruptor_pulse : SUBPROGRAM ACCESS Pixycam.PI_pulse -> Interruptor.RI_pulse {
    Taste::coordinates => "355 912 355 985 280 985 280 1085";
  };
  Pixycam_startStop_Interruptor_startStop : SUBPROGRAM ACCESS Pixycam.PI_startStop -> Interruptor.RI_startStop {
    Taste::coordinates => "527 912 527 986 729 986 729 1084";
  };
  Interruptor_onOff_GUI_onOff : SUBPROGRAM ACCESS Interruptor.PI_onOff -> GUI.RI_onOff {
    Taste::coordinates => "449 576 449 664 499 664 499 756";
  };
  Interruptor_dopulse_GUI_dopulse : SUBPROGRAM ACCESS Interruptor.PI_dopulse -> GUI.RI_dopulse {
    Taste::coordinates => "351 576 351 666 351 666 351 756";
  };
END interfaceview.others;

PROPERTIES
  Taste::dataView => ("DataView");
  Taste::dataViewPath => ("DataView.aadl");
  Taste::coordinates => "0 0 2970 2100";
  Taste::version => "1.3.19";
END interfaceview::IV;

PACKAGE interfaceview::FV
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
END interfaceview::FV;

