--  TASTE - Warning: This is NOT the real Concurrency view  --
--  This file was automatically generated and should remain read-only
--  Open it with TASTE-IV
--  The only intended use of this file is visualization - not processing.

package generated_cv::IV::ConcurrencyView
public
with dataview; 
with exportedComponent::FV;
with taste;

  --{ interfaceview obj6480 10 10
  --TASTE-generated concurrency view
  --For visualization purposes.
  --}

  system exportedComponent
  end exportedComponent;

  system implementation exportedComponent.others
    subcomponents
	obsw : system interfaceview::IV::PASSIVE_obsw.others;
	ground : system interfaceview::IV::PASSIVE_ground.others;
	drone_model : system interfaceview::IV::PASSIVE_drone_model.others;
	controller : system interfaceview::IV::PASSIVE_controller.others;
	x86_partition_taste_api : system interfaceview::IV::PASSIVE_x86_partition_taste_api.others;
	vt_obsw_pulse : system interfaceview::IV::THREAD_vt_obsw_pulse.others;
	vt_obsw_takeoff : system interfaceview::IV::THREAD_vt_obsw_takeoff.others;
	vt_ground_getheight : system interfaceview::IV::THREAD_vt_ground_getheight.others;
	vt_ground_gui_polling_ground : system interfaceview::IV::THREAD_vt_ground_gui_polling_ground.others;
    connections
	sporadic_artificial_GetHeight : subprogram access THREAD_vt_ground_getheight.artificial_GetHeight -> PASSIVE_obsw.GetHeight;
	unprotected_Compute_Force : subprogram access PASSIVE_controller.Compute_Force -> PASSIVE_obsw.Compute_Force;
	unprotected_Response : subprogram access PASSIVE_drone_model.Response -> PASSIVE_obsw.Response;
	unprotected_obsw_has_pending_msg : subprogram access PASSIVE_x86_partition_taste_api.obsw_has_pending_msg -> PASSIVE_obsw.check_queue;
	sporadic_artificial_Takeoff : subprogram access THREAD_vt_obsw_takeoff.artificial_Takeoff -> PASSIVE_ground.Takeoff;
	protected_Pulse : subprogram access PASSIVE_obsw.Pulse -> THREAD_vt_obsw_pulse.Pulse;
	sporadic_artificial_GetHeight : subprogram access THREAD_vt_ground_getheight.artificial_GetHeight -> THREAD_vt_obsw_pulse.GetHeight_vt;
	unprotected_Compute_Force : subprogram access PASSIVE_controller.Compute_Force -> THREAD_vt_obsw_pulse.Compute_Force_vt;
	unprotected_Response : subprogram access PASSIVE_drone_model.Response -> THREAD_vt_obsw_pulse.Response_vt;
	unprotected_obsw_has_pending_msg : subprogram access PASSIVE_x86_partition_taste_api.obsw_has_pending_msg -> THREAD_vt_obsw_pulse.check_queue_vt;
	protected_Takeoff : subprogram access PASSIVE_obsw.Takeoff -> THREAD_vt_obsw_takeoff.Takeoff;
	sporadic_artificial_GetHeight : subprogram access THREAD_vt_ground_getheight.artificial_GetHeight -> THREAD_vt_obsw_takeoff.GetHeight_vt;
	unprotected_Compute_Force : subprogram access PASSIVE_controller.Compute_Force -> THREAD_vt_obsw_takeoff.Compute_Force_vt;
	unprotected_Response : subprogram access PASSIVE_drone_model.Response -> THREAD_vt_obsw_takeoff.Response_vt;
	unprotected_obsw_has_pending_msg : subprogram access PASSIVE_x86_partition_taste_api.obsw_has_pending_msg -> THREAD_vt_obsw_takeoff.check_queue_vt;
	protected_GetHeight : subprogram access PASSIVE_ground.GetHeight -> THREAD_vt_ground_getheight.GetHeight;
	sporadic_artificial_Takeoff : subprogram access THREAD_vt_obsw_takeoff.artificial_Takeoff -> THREAD_vt_ground_getheight.Takeoff_vt;
	protected_gui_polling_ground : subprogram access PASSIVE_ground.gui_polling_ground -> THREAD_vt_ground_gui_polling_ground.gui_polling_ground;
	sporadic_artificial_Takeoff : subprogram access THREAD_vt_obsw_takeoff.artificial_Takeoff -> THREAD_vt_ground_gui_polling_ground.Takeoff_vt;
  end exportedComponent.others;

  system PASSIVE_obsw
    features
	Pulse : provides subprogram access exportedComponent::fv::Pulse.others
	  { taste::Coordinates => "200 215 200 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 100;};
	Takeoff : provides subprogram access exportedComponent::fv::Takeoff.others
	  { taste::Coordinates => "200 260 200 260";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	GetHeight : requires subprogram access exportedComponent::fv::artificial_GetHeight.others
	  { taste::Coordinates => "450 215 450 215";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	Compute_Force : requires subprogram access exportedComponent::fv::Compute_Force.others
	  { taste::Coordinates => "450 260 450 260";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	Response : requires subprogram access exportedComponent::fv::Response.others
	  { taste::Coordinates => "450 305 450 305";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	check_queue : requires subprogram access exportedComponent::fv::obsw_has_pending_msg.others
	  { taste::Coordinates => "450 350 450 350";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "200 200 450 380";
	taste::instance_name => "obsw";
  end PASSIVE_obsw;

  system implementation PASSIVE_obsw.others
    subcomponents
	Pulse_impl : subprogram exportedComponent::FV::Pulse.others
	  { compute_execution_time => 0ms..0ms;};
	Takeoff_impl : subprogram exportedComponent::FV::Takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	GetHeight_impl : subprogram exportedComponent::FV::artificial_GetHeight.others
	  { compute_execution_time => 0ms..0ms;};
	Compute_Force_impl : subprogram exportedComponent::FV::Compute_Force.others
	  { compute_execution_time => 0ms..0ms;};
	Response_impl : subprogram exportedComponent::FV::Response.others
	  { compute_execution_time => 0ms..0ms;};
	check_queue_impl : subprogram exportedComponent::FV::obsw_has_pending_msg.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access Pulse_impl -> Pulse;
	subprogram access Takeoff_impl -> Takeoff;
	subprogram access GetHeight_impl -> GetHeight;
	subprogram access Compute_Force_impl -> Compute_Force;
	subprogram access Response_impl -> Response;
	subprogram access check_queue_impl -> check_queue;
  end PASSIVE_obsw.others;

  system PASSIVE_ground
    features
	GetHeight : provides subprogram access exportedComponent::fv::GetHeight.others
	  { taste::Coordinates => "600 215 600 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	Takeoff : requires subprogram access exportedComponent::fv::artificial_Takeoff.others
	  { taste::Coordinates => "850 215 850 215";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	gui_polling_ground : provides subprogram access exportedComponent::fv::gui_polling_ground.others
	  { taste::Coordinates => "600 260 600 260";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 40;};
    properties
	source_language => C;
	taste::coordinates => "600 200 850 290";
	taste::instance_name => "ground";
  end PASSIVE_ground;

  system implementation PASSIVE_ground.others
    subcomponents
	GetHeight_impl : subprogram exportedComponent::FV::GetHeight.others
	  { compute_execution_time => 0ms..0ms;};
	Takeoff_impl : subprogram exportedComponent::FV::artificial_Takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	gui_polling_ground_impl : subprogram exportedComponent::FV::gui_polling_ground.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access GetHeight_impl -> GetHeight;
	subprogram access Takeoff_impl -> Takeoff;
	subprogram access gui_polling_ground_impl -> gui_polling_ground;
  end PASSIVE_ground.others;

  system PASSIVE_drone_model
    features
	Response : provides subprogram access exportedComponent::fv::Response.others
	  { taste::Coordinates => "1000 215 1000 215";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "1000 200 1250 245";
	taste::instance_name => "drone_model";
  end PASSIVE_drone_model;

  system implementation PASSIVE_drone_model.others
    subcomponents
	Response_impl : subprogram exportedComponent::FV::Response.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access Response_impl -> Response;
  end PASSIVE_drone_model.others;

  system PASSIVE_controller
    features
	Compute_Force : provides subprogram access exportedComponent::fv::Compute_Force.others
	  { taste::Coordinates => "1400 215 1400 215";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "1400 200 1650 245";
	taste::instance_name => "controller";
  end PASSIVE_controller;

  system implementation PASSIVE_controller.others
    subcomponents
	Compute_Force_impl : subprogram exportedComponent::FV::Compute_Force.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access Compute_Force_impl -> Compute_Force;
  end PASSIVE_controller.others;

  system PASSIVE_x86_partition_taste_api
    features
	obsw_has_pending_msg : provides subprogram access exportedComponent::fv::check_queue.others
	  { taste::Coordinates => "1800 215 1800 215";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "1800 200 2050 245";
	taste::instance_name => "x86_partition_taste_api";
  end PASSIVE_x86_partition_taste_api;

  system implementation PASSIVE_x86_partition_taste_api.others
    subcomponents
	obsw_has_pending_msg_impl : subprogram exportedComponent::FV::check_queue.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access obsw_has_pending_msg_impl -> obsw_has_pending_msg;
  end PASSIVE_x86_partition_taste_api.others;

  system THREAD_vt_obsw_pulse
    features
	artificial_Pulse : provides subprogram access exportedComponent::fv::Pulse.others
	  { taste::Coordinates => "2200 215 2200 215";
	    taste::RCMoperationKind => cyclic;
	    taste::RCMperiod => 100;};
	Pulse : requires subprogram access exportedComponent::fv::Pulse.others
	  { taste::Coordinates => "2450 215 2450 215";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 100;};
	GetHeight_vt : requires subprogram access exportedComponent::fv::artificial_GetHeight.others
	  { taste::Coordinates => "2450 260 2450 260";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	Compute_Force_vt : requires subprogram access exportedComponent::fv::Compute_Force.others
	  { taste::Coordinates => "2450 305 2450 305";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	Response_vt : requires subprogram access exportedComponent::fv::Response.others
	  { taste::Coordinates => "2450 350 2450 350";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	check_queue_vt : requires subprogram access exportedComponent::fv::obsw_has_pending_msg.others
	  { taste::Coordinates => "2450 395 2450 395";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "2200 200 2450 425";
	taste::instance_name => "vt_obsw_pulse";
  end THREAD_vt_obsw_pulse;

  system implementation THREAD_vt_obsw_pulse.others
    subcomponents
	artificial_Pulse_impl : subprogram exportedComponent::FV::Pulse.others
	  { compute_execution_time => 0ms..0ms;};
	Pulse_impl : subprogram exportedComponent::FV::Pulse.others
	  { compute_execution_time => 0ms..0ms;};
	GetHeight_vt_impl : subprogram exportedComponent::FV::artificial_GetHeight.others
	  { compute_execution_time => 0ms..0ms;};
	Compute_Force_vt_impl : subprogram exportedComponent::FV::Compute_Force.others
	  { compute_execution_time => 0ms..0ms;};
	Response_vt_impl : subprogram exportedComponent::FV::Response.others
	  { compute_execution_time => 0ms..0ms;};
	check_queue_vt_impl : subprogram exportedComponent::FV::obsw_has_pending_msg.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_Pulse_impl -> artificial_Pulse;
	subprogram access Pulse_impl -> Pulse;
	subprogram access GetHeight_vt_impl -> GetHeight_vt;
	subprogram access Compute_Force_vt_impl -> Compute_Force_vt;
	subprogram access Response_vt_impl -> Response_vt;
	subprogram access check_queue_vt_impl -> check_queue_vt;
  end THREAD_vt_obsw_pulse.others;

  system THREAD_vt_obsw_takeoff
    features
	artificial_Takeoff : provides subprogram access exportedComponent::fv::Takeoff.others
	  { taste::Coordinates => "200 740 200 740";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	Takeoff : requires subprogram access exportedComponent::fv::Takeoff.others
	  { taste::Coordinates => "450 740 450 740";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	GetHeight_vt : requires subprogram access exportedComponent::fv::artificial_GetHeight.others
	  { taste::Coordinates => "450 785 450 785";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	Compute_Force_vt : requires subprogram access exportedComponent::fv::Compute_Force.others
	  { taste::Coordinates => "450 830 450 830";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	Response_vt : requires subprogram access exportedComponent::fv::Response.others
	  { taste::Coordinates => "450 875 450 875";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
	check_queue_vt : requires subprogram access exportedComponent::fv::obsw_has_pending_msg.others
	  { taste::Coordinates => "450 920 450 920";
	    taste::RCMoperationKind => unprotected;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "200 725 450 950";
	taste::instance_name => "vt_obsw_takeoff";
  end THREAD_vt_obsw_takeoff;

  system implementation THREAD_vt_obsw_takeoff.others
    subcomponents
	artificial_Takeoff_impl : subprogram exportedComponent::FV::Takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	Takeoff_impl : subprogram exportedComponent::FV::Takeoff.others
	  { compute_execution_time => 0ms..0ms;};
	GetHeight_vt_impl : subprogram exportedComponent::FV::artificial_GetHeight.others
	  { compute_execution_time => 0ms..0ms;};
	Compute_Force_vt_impl : subprogram exportedComponent::FV::Compute_Force.others
	  { compute_execution_time => 0ms..0ms;};
	Response_vt_impl : subprogram exportedComponent::FV::Response.others
	  { compute_execution_time => 0ms..0ms;};
	check_queue_vt_impl : subprogram exportedComponent::FV::obsw_has_pending_msg.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_Takeoff_impl -> artificial_Takeoff;
	subprogram access Takeoff_impl -> Takeoff;
	subprogram access GetHeight_vt_impl -> GetHeight_vt;
	subprogram access Compute_Force_vt_impl -> Compute_Force_vt;
	subprogram access Response_vt_impl -> Response_vt;
	subprogram access check_queue_vt_impl -> check_queue_vt;
  end THREAD_vt_obsw_takeoff.others;

  system THREAD_vt_ground_getheight
    features
	artificial_GetHeight : provides subprogram access exportedComponent::fv::GetHeight.others
	  { taste::Coordinates => "600 740 600 740";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
	GetHeight : requires subprogram access exportedComponent::fv::GetHeight.others
	  { taste::Coordinates => "850 740 850 740";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 0;};
	Takeoff_vt : requires subprogram access exportedComponent::fv::artificial_Takeoff.others
	  { taste::Coordinates => "850 785 850 785";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "600 725 850 815";
	taste::instance_name => "vt_ground_getheight";
  end THREAD_vt_ground_getheight;

  system implementation THREAD_vt_ground_getheight.others
    subcomponents
	artificial_GetHeight_impl : subprogram exportedComponent::FV::GetHeight.others
	  { compute_execution_time => 0ms..0ms;};
	GetHeight_impl : subprogram exportedComponent::FV::GetHeight.others
	  { compute_execution_time => 0ms..0ms;};
	Takeoff_vt_impl : subprogram exportedComponent::FV::artificial_Takeoff.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_GetHeight_impl -> artificial_GetHeight;
	subprogram access GetHeight_impl -> GetHeight;
	subprogram access Takeoff_vt_impl -> Takeoff_vt;
  end THREAD_vt_ground_getheight.others;

  system THREAD_vt_ground_gui_polling_ground
    features
	artificial_gui_polling_ground : provides subprogram access exportedComponent::fv::gui_polling_ground.others
	  { taste::Coordinates => "1000 740 1000 740";
	    taste::RCMoperationKind => cyclic;
	    taste::RCMperiod => 40;};
	gui_polling_ground : requires subprogram access exportedComponent::fv::gui_polling_ground.others
	  { taste::Coordinates => "1250 740 1250 740";
	    taste::RCMoperationKind => protected;
	    taste::RCMperiod => 40;};
	Takeoff_vt : requires subprogram access exportedComponent::fv::artificial_Takeoff.others
	  { taste::Coordinates => "1250 785 1250 785";
	    taste::RCMoperationKind => sporadic;
	    taste::RCMperiod => 0;};
    properties
	source_language => C;
	taste::coordinates => "1000 725 1250 815";
	taste::instance_name => "vt_ground_gui_polling_ground";
  end THREAD_vt_ground_gui_polling_ground;

  system implementation THREAD_vt_ground_gui_polling_ground.others
    subcomponents
	artificial_gui_polling_ground_impl : subprogram exportedComponent::FV::gui_polling_ground.others
	  { compute_execution_time => 0ms..0ms;};
	gui_polling_ground_impl : subprogram exportedComponent::FV::gui_polling_ground.others
	  { compute_execution_time => 0ms..0ms;};
	Takeoff_vt_impl : subprogram exportedComponent::FV::artificial_Takeoff.others
	  { compute_execution_time => 0ms..0ms;};
    connections
	subprogram access artificial_gui_polling_ground_impl -> artificial_gui_polling_ground;
	subprogram access gui_polling_ground_impl -> gui_polling_ground;
	subprogram access Takeoff_vt_impl -> Takeoff_vt;
  end THREAD_vt_ground_gui_polling_ground.others;

properties
  taste::coordinates => "0 0 2970 2100";

end generated_cv::IV;

package exportedComponent::FV
public
with dataview;
with taste;

  subprogram Pulse
  end Pulse;

  subprogram Takeoff
  end Takeoff;

  subprogram artificial_GetHeight
  end artificial_GetHeight;

  subprogram Compute_Force
  end Compute_Force;

  subprogram Response
  end Response;

  subprogram obsw_has_pending_msg
  end obsw_has_pending_msg;

  subprogram GetHeight
  end GetHeight;

  subprogram artificial_Takeoff
  end artificial_Takeoff;

  subprogram gui_polling_ground
  end gui_polling_ground;

  subprogram check_queue
  end check_queue;

end exportedComponent::FV;
