---------------------------------------------------
-- AADL2.0
-- TASTE
-- 
-- 
---------------------------------------------------

PACKAGE interfaceview::FV::OBSW
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_Pulse
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Pulse;

SUBPROGRAM IMPLEMENTATION PI_Pulse.others
END PI_Pulse.others;

SUBPROGRAM PI_Takeoff
FEATURES
  ReferenceHeight : IN PARAMETER DataView::MyReal {
    Taste::encoding => UPER;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Takeoff;

SUBPROGRAM IMPLEMENTATION PI_Takeoff.others
END PI_Takeoff.others;

SUBPROGRAM RI_GetHeight
FEATURES
  Height : IN PARAMETER DataView::MyReal {
    Taste::encoding => UPER;
  };
END RI_GetHeight;

SUBPROGRAM IMPLEMENTATION RI_GetHeight.others
END RI_GetHeight.others;

SUBPROGRAM RI_Compute_Force
FEATURES
  ReferenceHeight : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  Force : OUT PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  HeightVelocity : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  Height : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
END RI_Compute_Force;

SUBPROGRAM IMPLEMENTATION RI_Compute_Force.others
END RI_Compute_Force.others;

SUBPROGRAM RI_Response
FEATURES
  Force : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  HeightVelocity : OUT PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  Height : OUT PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
END RI_Response;

SUBPROGRAM IMPLEMENTATION RI_Response.others
END RI_Response.others;

END interfaceview::FV::OBSW;

PACKAGE interfaceview::FV::Ground
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_GetHeight
FEATURES
  Height : IN PARAMETER DataView::MyReal {
    Taste::encoding => UPER;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_GetHeight;

SUBPROGRAM IMPLEMENTATION PI_GetHeight.others
END PI_GetHeight.others;

SUBPROGRAM RI_Takeoff
FEATURES
  ReferenceHeight : IN PARAMETER DataView::MyReal {
    Taste::encoding => UPER;
  };
END RI_Takeoff;

SUBPROGRAM IMPLEMENTATION RI_Takeoff.others
END RI_Takeoff.others;

END interfaceview::FV::Ground;

PACKAGE interfaceview::FV::Drone_Model
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_Response
FEATURES
  Force : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  HeightVelocity : OUT PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  Height : OUT PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Response;

SUBPROGRAM IMPLEMENTATION PI_Response.others
END PI_Response.others;

END interfaceview::FV::Drone_Model;

PACKAGE interfaceview::FV::Controller
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_Compute_Force
FEATURES
  ReferenceHeight : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  Force : OUT PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  HeightVelocity : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
  Height : IN PARAMETER DataView::MyReal {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Compute_Force;

SUBPROGRAM IMPLEMENTATION PI_Compute_Force.others
END PI_Compute_Force.others;

END interfaceview::FV::Controller;

PACKAGE interfaceview::IV
PUBLIC

WITH interfaceview::FV::OBSW;
WITH interfaceview::FV::Ground;
WITH interfaceview::FV::Controller;
WITH interfaceview::FV::Drone_Model;
WITH interfaceview::FV;
WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SYSTEM OBSW
FEATURES
  PI_Pulse : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::OBSW::PI_Pulse.others {
    Taste::coordinates => "463 550";
    Taste::RCMoperationKind => cyclic;
    Taste::RCMperiod => 100 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Pulse";
  };
  PI_Takeoff : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::OBSW::PI_Takeoff.others {
    Taste::coordinates => "675 789";
    Taste::RCMoperationKind => sporadic;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Takeoff";
  };
  RI_GetHeight : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Ground::PI_GetHeight.others {
    Taste::coordinates => "877 789";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "GetHeight";
    Taste::labelInheritance => "true";
  };
  RI_Compute_Force : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Controller::PI_Compute_Force.others {
    Taste::coordinates => "1147 465";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "Compute_Force";
    Taste::labelInheritance => "true";
  };
  RI_Response : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Drone_Model::PI_Response.others {
    Taste::coordinates => "1147 690";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "Response";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (SDL);
END OBSW;

SYSTEM IMPLEMENTATION OBSW.others
SUBCOMPONENTS
  Pulse_impl : SUBPROGRAM interfaceview::FV::OBSW::PI_Pulse.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
  Takeoff_impl : SUBPROGRAM interfaceview::FV::OBSW::PI_Takeoff.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_Pulse_impl : SUBPROGRAM ACCESS Pulse_impl -> PI_Pulse;
  OpToPICnx_Takeoff_impl : SUBPROGRAM ACCESS Takeoff_impl -> PI_Takeoff;
END OBSW.others;

SYSTEM Ground
FEATURES
  PI_GetHeight : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Ground::PI_GetHeight.others {
    Taste::coordinates => "877 1068";
    Taste::RCMoperationKind => sporadic;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "GetHeight";
  };
  RI_Takeoff : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::OBSW::PI_Takeoff.others {
    Taste::coordinates => "673 1068";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "Takeoff";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (GUI);
END Ground;

SYSTEM IMPLEMENTATION Ground.others
SUBCOMPONENTS
  GetHeight_impl : SUBPROGRAM interfaceview::FV::Ground::PI_GetHeight.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_GetHeight_impl : SUBPROGRAM ACCESS GetHeight_impl -> PI_GetHeight;
END Ground.others;

SYSTEM Drone_Model
FEATURES
  PI_Response : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Drone_Model::PI_Response.others {
    Taste::coordinates => "1610 946";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Response";
  };
PROPERTIES
  Source_Language => (C);
END Drone_Model;

SYSTEM IMPLEMENTATION Drone_Model.others
SUBCOMPONENTS
  Response_impl : SUBPROGRAM interfaceview::FV::Drone_Model::PI_Response.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_Response_impl : SUBPROGRAM ACCESS Response_impl -> PI_Response;
END Drone_Model.others;

SYSTEM Controller
FEATURES
  PI_Compute_Force : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Controller::PI_Compute_Force.others {
    Taste::coordinates => "1647 463";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Compute_Force";
  };
PROPERTIES
  Source_Language => (C);
END Controller;

SYSTEM IMPLEMENTATION Controller.others
SUBCOMPONENTS
  Compute_Force_impl : SUBPROGRAM interfaceview::FV::Controller::PI_Compute_Force.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_Compute_Force_impl : SUBPROGRAM ACCESS Compute_Force_impl -> PI_Compute_Force;
END Controller.others;

SYSTEM interfaceview
END interfaceview;

SYSTEM IMPLEMENTATION interfaceview.others
SUBCOMPONENTS
  OBSW : SYSTEM interfaceview::IV::OBSW.others {
    Taste::coordinates => "463 363 1147 789";
  };
  Ground : SYSTEM interfaceview::IV::Ground.others {
    Taste::coordinates => "490 1068 1109 1422";
  };
  Drone_Model : SYSTEM interfaceview::IV::Drone_Model.others {
    Taste::coordinates => "1610 811 2068 1130";
  };
  Controller : SYSTEM interfaceview::IV::Controller.others {
    Taste::coordinates => "1647 368 2070 687";
  };
CONNECTIONS
  OBSW_Takeoff_Ground_Takeoff : SUBPROGRAM ACCESS OBSW.PI_Takeoff -> Ground.RI_Takeoff {
    Taste::coordinates => "673 1068 673 981 675 981 675 789";
  };
  Ground_GetHeight_OBSW_GetHeight : SUBPROGRAM ACCESS Ground.PI_GetHeight -> OBSW.RI_GetHeight {
    Taste::coordinates => "877 789 877 982 877 982 877 1068";
  };
  Controller_Compute_Force_OBSW_Compute_Force : SUBPROGRAM ACCESS Controller.PI_Compute_Force -> OBSW.RI_Compute_Force {
    Taste::coordinates => "1147 465 1362 465 1362 463 1647 463";
  };
  Drone_Model_Response_OBSW_Response : SUBPROGRAM ACCESS Drone_Model.PI_Response -> OBSW.RI_Response {
    Taste::coordinates => "1147 690 1370 690 1370 946 1610 946";
  };
END interfaceview.others;

PROPERTIES
  Taste::dataView => ("DataView");
  Taste::dataViewPath => ("DataView.aadl");
  Taste::coordinates => "0 0 2970 2100";
  Taste::version => "1.3.19";
END interfaceview::IV;

PACKAGE interfaceview::FV
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
END interfaceview::FV;

