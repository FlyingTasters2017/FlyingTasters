---------------------------------------------------
-- AADL2.0
-- TASTE
-- 
-- 
---------------------------------------------------

PACKAGE interfaceview::FV::Copter_IMU
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_Pulse
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Pulse;

SUBPROGRAM IMPLEMENTATION PI_Pulse.others
END PI_Pulse.others;

SUBPROGRAM RI_Get_IMU_Data
FEATURES
  gyro_X : IN PARAMETER DataView::MyGyroVal {
    Taste::encoding => NATIVE;
  };
  gyro_Y : IN PARAMETER DataView::MyGyroVal {
    Taste::encoding => NATIVE;
  };
  gyro_Z : IN PARAMETER DataView::MyGyroVal {
    Taste::encoding => NATIVE;
  };
  acc_X : IN PARAMETER DataView::MyAccVal {
    Taste::encoding => NATIVE;
  };
  acc_Y : IN PARAMETER DataView::MyAccVal {
    Taste::encoding => NATIVE;
  };
  acc_Z : IN PARAMETER DataView::MyAccVal {
    Taste::encoding => NATIVE;
  };
END RI_Get_IMU_Data;

SUBPROGRAM IMPLEMENTATION RI_Get_IMU_Data.others
END RI_Get_IMU_Data.others;

END interfaceview::FV::Copter_IMU;

PACKAGE interfaceview::FV::Control_Laws
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_Get_IMU_Data
FEATURES
  gyro_X : IN PARAMETER DataView::MyGyroVal {
    Taste::encoding => NATIVE;
  };
  gyro_Y : IN PARAMETER DataView::MyGyroVal {
    Taste::encoding => NATIVE;
  };
  gyro_Z : IN PARAMETER DataView::MyGyroVal {
    Taste::encoding => NATIVE;
  };
  acc_X : IN PARAMETER DataView::MyAccVal {
    Taste::encoding => NATIVE;
  };
  acc_Y : IN PARAMETER DataView::MyAccVal {
    Taste::encoding => NATIVE;
  };
  acc_Z : IN PARAMETER DataView::MyAccVal {
    Taste::encoding => NATIVE;
  };
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Get_IMU_Data;

SUBPROGRAM IMPLEMENTATION PI_Get_IMU_Data.others
END PI_Get_IMU_Data.others;

SUBPROGRAM RI_Land
END RI_Land;

SUBPROGRAM IMPLEMENTATION RI_Land.others
END RI_Land.others;

SUBPROGRAM RI_Take_Off
FEATURES
  Thrust : IN PARAMETER DataView::T_UInt32 {
    Taste::encoding => NATIVE;
  };
END RI_Take_Off;

SUBPROGRAM IMPLEMENTATION RI_Take_Off.others
END RI_Take_Off.others;

END interfaceview::FV::Control_Laws;

PACKAGE interfaceview::FV::drone
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SUBPROGRAM PI_Take_Off
FEATURES
  Thrust : IN PARAMETER DataView::T_UInt32 {
    Taste::encoding => NATIVE;
  };
END PI_Take_Off;

SUBPROGRAM IMPLEMENTATION PI_Take_Off.others
END PI_Take_Off.others;

SUBPROGRAM PI_System_Loop
END PI_System_Loop;

SUBPROGRAM IMPLEMENTATION PI_System_Loop.others
END PI_System_Loop.others;

SUBPROGRAM PI_Land
PROPERTIES
  Taste::Associated_Queue_Size => 1;
END PI_Land;

SUBPROGRAM IMPLEMENTATION PI_Land.others
END PI_Land.others;

END interfaceview::FV::drone;

PACKAGE interfaceview::IV
PUBLIC

WITH interfaceview::FV::Copter_IMU;
WITH interfaceview::FV::Control_Laws;
WITH interfaceview::FV::drone;
WITH interfaceview::FV;
WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
SYSTEM Copter_IMU
FEATURES
  PI_Pulse : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Copter_IMU::PI_Pulse.others {
    Taste::coordinates => "630 292";
    Taste::RCMoperationKind => cyclic;
    Taste::RCMperiod => 50 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Pulse";
  };
  RI_Get_IMU_Data : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::Control_Laws::PI_Get_IMU_Data.others {
    Taste::coordinates => "990 508";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "Get_IMU_Data";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (Ada);
END Copter_IMU;

SYSTEM IMPLEMENTATION Copter_IMU.others
SUBCOMPONENTS
  Pulse_impl : SUBPROGRAM interfaceview::FV::Copter_IMU::PI_Pulse.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_Pulse_impl : SUBPROGRAM ACCESS Pulse_impl -> PI_Pulse;
END Copter_IMU.others;

SYSTEM Control_Laws
FEATURES
  PI_Get_IMU_Data : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::Control_Laws::PI_Get_IMU_Data.others {
    Taste::coordinates => "1678 359";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Get_IMU_Data";
  };
  RI_Land : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::drone::PI_Land.others {
    Taste::coordinates => "2370 826";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "Land";
    Taste::labelInheritance => "true";
  };
  RI_Take_Off : REQUIRES SUBPROGRAM ACCESS interfaceview::FV::drone::PI_Take_Off.others {
    Taste::coordinates => "1841 826";
    Taste::RCMoperationKind => any;
    Taste::InterfaceName => "Take_Off";
    Taste::labelInheritance => "true";
  };
PROPERTIES
  Source_Language => (C);
END Control_Laws;

SYSTEM IMPLEMENTATION Control_Laws.others
SUBCOMPONENTS
  Get_IMU_Data_impl : SUBPROGRAM interfaceview::FV::Control_Laws::PI_Get_IMU_Data.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_Get_IMU_Data_impl : SUBPROGRAM ACCESS Get_IMU_Data_impl -> PI_Get_IMU_Data;
END Control_Laws.others;

SYSTEM drone
FEATURES
  PI_Take_Off : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::drone::PI_Take_Off.others {
    Taste::coordinates => "1339 1553";
    Taste::RCMoperationKind => unprotected;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Take_Off";
  };
  PI_System_Loop : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::drone::PI_System_Loop.others {
    Taste::coordinates => "780 1553";
    Taste::RCMoperationKind => cyclic;
    Taste::RCMperiod => 60 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "System_Loop";
  };
  PI_Land : PROVIDES SUBPROGRAM ACCESS interfaceview::FV::drone::PI_Land.others {
    Taste::coordinates => "1996 1553";
    Taste::RCMoperationKind => unprotected;
    Taste::RCMperiod => 0 ms;
    Taste::Deadline => 0 ms;
    Taste::InterfaceName => "Land";
  };
PROPERTIES
  Source_Language => (Ada);
END drone;

SYSTEM IMPLEMENTATION drone.others
SUBCOMPONENTS
  Take_Off_impl : SUBPROGRAM interfaceview::FV::drone::PI_Take_Off.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
  System_Loop_impl : SUBPROGRAM interfaceview::FV::drone::PI_System_Loop.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
  Land_impl : SUBPROGRAM interfaceview::FV::drone::PI_Land.others {
    Compute_Execution_Time => 0 ms .. 0 ms;
  };
CONNECTIONS
  OpToPICnx_Take_Off_impl : SUBPROGRAM ACCESS Take_Off_impl -> PI_Take_Off;
  OpToPICnx_System_Loop_impl : SUBPROGRAM ACCESS System_Loop_impl -> PI_System_Loop;
  OpToPICnx_Land_impl : SUBPROGRAM ACCESS Land_impl -> PI_Land;
END drone.others;

SYSTEM interfaceview
END interfaceview;

SYSTEM IMPLEMENTATION interfaceview.others
SUBCOMPONENTS
  Copter_IMU : SYSTEM interfaceview::IV::Copter_IMU.others {
    Taste::coordinates => "292 292 990 1026";
  };
  Control_Laws : SYSTEM interfaceview::IV::Control_Laws.others {
    Taste::coordinates => "1678 251 2519 826";
  };
  drone : SYSTEM interfaceview::IV::drone.others {
    Taste::coordinates => "452 1553 2303 2036";
  };
CONNECTIONS
  Control_Laws_Get_IMU_Data_Copter_IMU_Get_IMU_Data : SUBPROGRAM ACCESS Control_Laws.PI_Get_IMU_Data -> Copter_IMU.RI_Get_IMU_Data {
    Taste::coordinates => "990 508 1413 508 1413 359 1678 359";
  };
  drone_Land_Control_Laws_Land : SUBPROGRAM ACCESS drone.PI_Land -> Control_Laws.RI_Land {
    Taste::coordinates => "2370 826 2370 1189 1996 1189 1996 1553";
  };
  drone_Take_Off_Control_Laws_Take_Off : SUBPROGRAM ACCESS drone.PI_Take_Off -> Control_Laws.RI_Take_Off {
    Taste::coordinates => "1841 826 1841 1113 1339 1113 1339 1553";
  };
END interfaceview.others;

PROPERTIES
  Taste::dataView => ("DataView");
  Taste::dataViewPath => ("DataView.aadl");
  Taste::coordinates => "0 0 2970 2100";
  Taste::version => "1.3.19";
END interfaceview::IV;

PACKAGE interfaceview::FV
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
END interfaceview::FV;

